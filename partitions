class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def partition(head, x):
    # Create two dummy nodes for two partitions
    before_head = ListNode(0)
    before = before_head
    after_head = ListNode(0)
    after = after_head

    current = head
    while current:
        if current.val < x:
            before.next = current
            before = before.next
        else:
            after.next = current
            after = after.next
        current = current.next

    # Merge two partitions
    after.next = None
    before.next = after_head.next

    return before_head.next

# Example usage:
# Constructing a linked list: 1 -> 4 -> 3 -> 2 -> 5 -> 2
head = ListNode(1)
head.next = ListNode(4)
head.next.next = ListNode(3)
head.next.next.next = ListNode(2)
head.next.next.next.next = ListNode(5)
head.next.next.next.next.next = ListNode(2)

x = 3
result = partition(head, x)

# Print the result
while result:
    print(result.val, end=" -> ")
    result = result.next
